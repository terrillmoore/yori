setlocal

REM 
REM Set build ID.  For release builds, this needs to be zero.
REM

set BLDID=
if strcmp -i %1%!=official;set BLDID=`date`;set BLDID=0
if strcmp %BLDID%==0;echo Building OFFICIAL build;echo Building DAILY build

REM
REM Determine architecture by looking at compiler output.
REM

set ARCH=win32
cl /? 2>&1 | findstr /C:"for x64" >NUL 2>&1
if intcmp %ERRORLEVEL%==0;set ARCH=amd64
cl /? 2>&1 | findstr /C:"for AMD64" >NUL 2>&1
if intcmp %ERRORLEVEL%==0;set ARCH=amd64
cl /? 2>&1 | findstr /C:"for ARM64" >NUL 2>&1
if intcmp %ERRORLEVEL%==0;set ARCH=arm64

pushd ..

set BINPKGS=yori-modular yori-core yori-typical yori-extra yori-ypm yori-one

REM
REM Extract Yori version from ver.inc and generate string containing the
REM version
REM

set YORI_VER_MAJOR=`findstr YORI_BASE_VER_MAJOR= config\ver.inc|cut -d = -f 1`
set YORI_VER_MINOR=`findstr YORI_BASE_VER_MINOR= config\ver.inc|cut -d = -f 1`
if strcmp %BLDID%==0; set BUILDSTRING=%YORI_VER_MAJOR%.%YORI_VER_MINOR%; set BUILDSTRING=%YORI_VER_MAJOR%.%YORI_VER_MINOR%.%BLDID%
if strcmp %BLDID%==0; set UPGRADEPATH=http://www.malsmith.net/download/?obj=yori/latest-stable; set UPGRADEPATH=http://www.malsmith.net/download/?obj=yori/latest-daily
set SOURCEPATH=http://www.malsmith.net/download/?obj=yori/%BUILDSTRING%

set OUTDIR=%CD%\pkg\out

echo *** Cleaning tree
nmake /nologo clean >NUL

mkdir %OUTDIR% >NUL 2>&1

echo *** Building debug
nmake /nologo PDB=1 DEBUG=1 UNICODE=1 YORI_BUILD_ID=%BLDID%

echo *** Generating debug installer

ypm -cs %OUTDIR%\yori-source-noarch.cab yori-source %BUILDSTRING% -filepath . &

if fscmp -d pkg\%ARCH%-dbg; rd /s pkg\%ARCH%-dbg
mkdir pkg\%ARCH%-dbg
move bin\%ARCH% pkg\%ARCH%-dbg\bin
move sym\%ARCH% pkg\%ARCH%-dbg\sym
pushd pkg\%ARCH%-dbg\bin
for -p %NUMBER_OF_PROCESSORS% %%i in (%BINPKGS%) do ypm -c %OUTDIR%\%%i-dbg-%ARCH%.cab %%i-dbg %BUILDSTRING% %ARCH% -upgradepath %UPGRADEPATH%/%%i-dbg-%ARCH%.cab -sourcepath %SOURCEPATH%/yori-source-noarch.cab -symbolpath %SOURCEPATH%/%%i-dbg-pdb-%ARCH%.cab -replaces %%i -filelist ..\..\%%i.lst
popd
pushd pkg\%ARCH%-dbg\sym
for -p %NUMBER_OF_PROCESSORS% %%i in (%BINPKGS%) do ypm -c %OUTDIR%\%%i-dbg-pdb-%ARCH%.cab %%i-dbg-pdb %BUILDSTRING% %ARCH% -upgradepath %UPGRADEPATH%/%%i-dbg-pdb-%ARCH%.cab -sourcepath %SOURCEPATH%/yori-source-noarch.cab -replaces %%i-pdb -filelist ..\..\%%i-pdb.lst
popd

echo *** Cleaning tree
nmake /nologo clean >NUL

echo *** Building retail
nmake /nologo PDB=1 UNICODE=1 YORI_BUILD_ID=%BLDID%

wait

echo *** Generating retail installer
if fscmp -d pkg\%ARCH%; rd /s pkg\%ARCH%
mkdir pkg\%ARCH%
move bin\%ARCH% pkg\%ARCH%\bin
move sym\%ARCH% pkg\%ARCH%\sym
pushd pkg\%ARCH%\bin
for -p %NUMBER_OF_PROCESSORS% %%i in (%BINPKGS%) do ypm -c %OUTDIR%\%%i-%ARCH%.cab %%i %BUILDSTRING% %ARCH% -upgradepath %UPGRADEPATH%/%%i-%ARCH%.cab -sourcepath %SOURCEPATH%/yori-source-noarch.cab -symbolpath %SOURCEPATH%/%%i-pdb-%ARCH%.cab -replaces %%i-dbg -filelist ..\..\%%i.lst
popd
pushd pkg\%ARCH%\sym
for -p %NUMBER_OF_PROCESSORS% %%i in (%BINPKGS%) do ypm -c %OUTDIR%\%%i-pdb-%ARCH%.cab %%i-pdb %BUILDSTRING% %ARCH% -upgradepath %UPGRADEPATH%/%%i-pdb-%ARCH%.cab -sourcepath %SOURCEPATH%/yori-source-noarch.cab -replaces %%i-dbg-pdb -filelist ..\..\%%i-pdb.lst
popd

if strcmp %ARCH%==win32;mkdir %OUTDIR%\%ARCH% ^& copy pkg\%ARCH%\bin\ysetup.exe %OUTDIR%\%ARCH% >NUL 2>&1

REM
REM Generate yori-completion which is special because it's architecture
REM agnostic
REM

ypm -c %OUTDIR%\yori-completion-noarch.cab yori-completion %BUILDSTRING% noarch -upgradepath %UPGRADEPATH%/yori-completion-noarch.cab -sourcepath %SOURCEPATH%/yori-source-noarch.cab -filelist pkg\yori-completion.lst

REM
REM Generate pkglist.ini so that tools can find packages provided by this
REM directory
REM

pushd pkg
for %%i in (%BINPKGS%) do bld-pkglist %%i %ARCH% ^& bld-pkglist %%i-pdb %ARCH% ^& bld-pkglist %%i-dbg %ARCH% ^& bld-pkglist %%i-dbg-pdb %ARCH%
bld-pkglist yori-completion noarch
bld-pkglist yori-source noarch
popd

echo *** Cleaning tree

nmake /nologo clean >NUL

wait
popd
endlocal
